/* css 파일은 style 태그 내부에 작성한다 생각하고 코딩하면 된다  */

/* h1 태그 글자색 red */
h1{ color : red;}

code{
    background-color : pink; /* 배경색 pink */
    font-weight : bold; /* 글자 두껍게 */
    display: block; /* block 형식으로 변경 */
}



/* ------- 기본 속성 선택자 ------- */

/* div 태그 중 name 속성 값이 "name-1" 인 요소에 배경색 green  */
div[name = "name-1"] {background-color: green;}

/* div 태그 중 name 속성의 값이 "name-2"인 요소만 배경색 yellow */
div[name = "name-2"] {background-color: yellow;}

/* 모든 div 요소의 글자색을 흰색으로 변경 */
div{ color : gray;}



/* p 태그 중 data 속성의 값이 "data-1"인 요소만 배경색 red */
p[data  = "data-1"] {background-color: red;}

/* 내용이 p3, p4인 요소를 선택해 배경식 blue */
p[data = "data-2"] {background-color: blue}


/* 모든 요소(*) 중 name 속성 값이 "name-1"인 요소 글자 크기 20px  */
/* == div1, div2, p2, p3 선택 */

/* *[name="name-1"] {font-size: 20px;} */

/* 모든 요소 선택자(*) 생략 가능 */
/* name 속성 값이 "name-1" 인 요소 모두 선택 */
[name="name-1"] {font-size: 20px;}



/* ---- 자식 선택자 (>) ---- */

#parent1 { background-color: skyblue;}
#parent1 > li{ background-color: gold;}

/* 자식2, 자식4 의 글자색을 red */
#parent1 > li > span { color: red;}


/* ----- 후손 선택자 ( ) ----- */

/* 아이디가 parent2인 요소의 후손 중 모든 p태그 선택 */
#parent2 p {background-color: lightcoral;}

#parent2 > div > p {background-color: blue;}



/* 반응 선택자 */
.test-div{

     /* 3px 실선 검정색 */
    border: 3px solid black;

    width: 200px;
    height: 200px;

    /* 배경색 #ddd (16진수) */
    background-color: #ddd;

    /* 아랫쪽 요소와 30px 만큼 간격 추가 */
    margin-bottom: 30px;

    /* 마우스 커서를 손가락 모양으로 변경 */
    cursor: pointer;

}

/*  #activeBox가 클릭되고 있을 때 */
#activeBox:active {
    background-color: yellow;
}



/* #hoverBox에 마우스가 올라왔을 때 */
#hoverBox:hover{

    /* 배경 이미지 */
    background-image: url('../images/cats/cat5.jpg');

    /* 배경 이미지 크기 */
    background-size: cover;
}


/* ---- 상태 선택자 ---- */


/* :focus */
#input1:focus {
    /* 초점이 맞춰졌을 때 요소 바깥에 생기는 선 */
    outline-color: greenyellow ;
}


#input1{
  /* 요소의 기본 테두리 : border */
  border-color: red ;
}



/* :checked */
#input2:checked{
  width: 30px;
  height: 30px;
  background-color: red;
  /* radio, checkbox 선택 후 보이는 표시는 이미지이기 때문에 배경색이 적용되지 않는다! */

}



/* :enabled / :disabled */
.input3:enabled{ background-color: skyblue;}

.input3:disabled{ background-color: lightcoral;}



/* ----- 동위 선택자 ----- */

/* + : 바로 뒤 형제 요소 하나 */
#div1 + div {
    background-color: yellow;
}


/* ~ : 뒤에 존재하는 형제 요소 중 일치하는 요소 모두 선택 */
#div3 ~ div {
    background-color: springgreen;
}


/* ----- 체크박스 만들기 ----- */

/* 1. label 요소를 체크박스 모양으로 만들기 */
#check + label{
    width: 30px;  /* 너비 */
    height: 30px; /* 높이 */
    border: 1px solid black; /* 테두리 */

    /* 크기 지정 가능, 한 줄에 배치(수평 분할) */
    display : inline-block;
    cursor : pointer; /* 마우스 포인터 모양을 손가락으로 변경 */
    border-radius: 20%;

    /* 사용자가 선택(블럭)을 못하게 함 */
    user-select: none;
}

/* 2. 체크박스가 체크 되었을 때 label에 체크박스 이미지 표시 */
#check:checked + label{
    background-image: url('../images/checkbox.png');
    background-size: cover; /* 이미지 크기를 요소에 맞춰라 */
} 

/* 3. 체크박스를 존재는 하지만 보이지 않게 처리 */
#check{
    display: none; /* 표시하지 않겠다 */
}